# Generated by Django 4.2.7 on 2025-07-13 07:59

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('plans', '0003_organizationsubscription_current_receptionists_count_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='OnboardingStep',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('step_key', models.CharField(help_text='Unique identifier for this step', max_length=50, unique=True, verbose_name='Step Key')),
                ('step_number', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Step Number')),
                ('title', models.CharField(max_length=100, verbose_name='Step Title')),
                ('description', models.TextField(verbose_name='Step Description')),
                ('step_type', models.CharField(choices=[('organization', 'Organization Setup'), ('team', 'Team Setup'), ('professional', 'Professional Setup'), ('service', 'Service Setup'), ('billing', 'Billing Setup'), ('finalization', 'Finalization')], max_length=20, verbose_name='Step Type')),
                ('validation_type', models.CharField(choices=[('required', 'Required'), ('optional', 'Optional'), ('conditional', 'Conditional')], default='required', max_length=15, verbose_name='Validation Type')),
                ('required_fields', models.JSONField(default=list, help_text='List of required fields for this step', verbose_name='Required Fields')),
                ('validation_rules', models.JSONField(default=dict, help_text='Custom validation rules for this step', verbose_name='Validation Rules')),
                ('depends_on_steps', models.JSONField(default=list, help_text='List of step keys that must be completed before this step', verbose_name='Depends on Steps')),
                ('conditional_logic', models.JSONField(default=dict, help_text='Logic to determine if this step should be shown', verbose_name='Conditional Logic')),
                ('estimated_duration_minutes', models.PositiveIntegerField(default=5, verbose_name='Estimated Duration (minutes)')),
                ('ui_config', models.JSONField(default=dict, help_text='Frontend configuration for this step', verbose_name='UI Configuration')),
                ('help_text', models.TextField(blank=True, help_text='Additional help text for users', verbose_name='Help Text')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('is_skippable', models.BooleanField(default=False, verbose_name='Is Skippable')),
                ('display_order', models.PositiveIntegerField(default=0, verbose_name='Display Order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Onboarding Step',
                'verbose_name_plural': 'Onboarding Steps',
                'db_table': 'onboarding_step',
                'ordering': ['display_order', 'step_number'],
            },
        ),
        migrations.CreateModel(
            name='OnboardingSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_key', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('abandoned', 'Abandoned'), ('expired', 'Expired'), ('error', 'Error')], default='active', max_length=15)),
                ('completed_steps_count', models.PositiveIntegerField(default=0)),
                ('total_steps_count', models.PositiveIntegerField(default=0)),
                ('overall_progress_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('referrer', models.URLField(blank=True)),
                ('session_started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity_at', models.DateTimeField(auto_now=True)),
                ('session_ended_at', models.DateTimeField(blank=True, null=True)),
                ('total_duration_seconds', models.PositiveIntegerField(blank=True, null=True)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('current_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='current_sessions', to='onboarding.onboardingstep')),
                ('user_registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='onboarding_sessions', to='plans.userregistration')),
            ],
            options={
                'verbose_name': 'Onboarding Session',
                'verbose_name_plural': 'Onboarding Sessions',
                'db_table': 'onboarding_session',
                'ordering': ['-session_started_at'],
            },
        ),
        migrations.CreateModel(
            name='OnboardingProgress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('skipped', 'Skipped'), ('failed', 'Failed')], default='not_started', max_length=15)),
                ('completion_percentage', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Completion Percentage')),
                ('step_data', models.JSONField(default=dict, help_text='Data collected for this step', verbose_name='Step Data')),
                ('validation_errors', models.JSONField(default=list, help_text='Current validation errors for this step', verbose_name='Validation Errors')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Duration in Seconds')),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('last_error', models.TextField(blank=True, verbose_name='Last Error')),
                ('last_error_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('step', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='onboarding.onboardingstep')),
                ('user_registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_steps', to='plans.userregistration')),
            ],
            options={
                'verbose_name': 'Onboarding Progress',
                'verbose_name_plural': 'Onboarding Progress Records',
                'db_table': 'onboarding_progress',
                'ordering': ['step__display_order', 'step__step_number'],
                'unique_together': {('user_registration', 'step')},
            },
        ),
    ]
