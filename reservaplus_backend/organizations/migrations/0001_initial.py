# Generated by Django 4.2.7 on 2025-06-19 22:46

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=100, verbose_name='Apellido')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(max_length=20, verbose_name='Teléfono')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Fecha de Nacimiento')),
                ('notes', models.TextField(blank=True, verbose_name='Notas')),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organizations_client',
                'ordering': ['first_name', 'last_name'],
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('slug', models.SlugField(blank=True, max_length=200, unique=True)),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('industry_template', models.CharField(choices=[('salon', 'Peluquería/Salón de Belleza'), ('clinic', 'Clínica/Consultorio Médico'), ('fitness', 'Entrenamiento Personal/Fitness'), ('spa', 'Spa/Centro de Bienestar'), ('dental', 'Clínica Dental'), ('veterinary', 'Veterinaria'), ('beauty', 'Centro de Estética'), ('massage', 'Centro de Masajes'), ('other', 'Otro')], default='salon', max_length=50, verbose_name='Tipo de Industria')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('website', models.URLField(blank=True)),
                ('address', models.TextField(blank=True, verbose_name='Dirección')),
                ('city', models.CharField(blank=True, max_length=100, verbose_name='Ciudad')),
                ('country', models.CharField(default='Chile', max_length=100, verbose_name='País')),
                ('subscription_plan', models.CharField(choices=[('free', 'Plan Gratuito'), ('basic', 'Plan Básico'), ('professional', 'Plan Profesional'), ('enterprise', 'Plan Empresarial')], default='free', max_length=50, verbose_name='Plan de Suscripción')),
                ('settings', models.JSONField(blank=True, default=dict, help_text='Configuraciones específicas de la organización')),
                ('is_active', models.BooleanField(default=True)),
                ('is_trial', models.BooleanField(default=True)),
                ('trial_ends_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'organizations_organization',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Professional',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nombre')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('specialty', models.CharField(blank=True, max_length=100, verbose_name='Especialidad')),
                ('license_number', models.CharField(blank=True, max_length=50, verbose_name='Número de Licencia')),
                ('bio', models.TextField(blank=True, verbose_name='Biografía')),
                ('color_code', models.CharField(default='#4CAF50', help_text='Color hex para mostrar en el calendario', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('accepts_walk_ins', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='professionals', to='organizations.organization')),
            ],
            options={
                'db_table': 'organizations_professional',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nombre del Servicio')),
                ('description', models.TextField(blank=True, verbose_name='Descripción')),
                ('category', models.CharField(blank=True, max_length=100, verbose_name='Categoría')),
                ('duration_minutes', models.PositiveIntegerField(verbose_name='Duración (minutos)')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Precio')),
                ('buffer_time_before', models.PositiveIntegerField(default=0, help_text='Tiempo de preparación antes del servicio (minutos)')),
                ('buffer_time_after', models.PositiveIntegerField(default=0, help_text='Tiempo de limpieza después del servicio (minutos)')),
                ('is_active', models.BooleanField(default=True)),
                ('requires_preparation', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='services', to='organizations.organization')),
                ('professionals', models.ManyToManyField(blank=True, help_text='Profesionales que pueden realizar este servicio', related_name='services', to='organizations.professional')),
            ],
            options={
                'db_table': 'organizations_service',
                'ordering': ['category', 'name'],
            },
        ),
    ]
